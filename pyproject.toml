[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "dataset_citations"
version = "0.0.1"
description = "Automated BIDS dataset citation tracking and JSON generation system"
readme = "README.md"
license = {text = "Copyright Reserved"}
authors = [
    {name = "Seyed Yahya Shirazi", email = "shirazi@ieee.org"},
]
maintainers = [
    {name = "Seyed Yahya Shirazi", email = "shirazi@ieee.org"},
]
keywords = [
    "citations", 
    "BIDS", 
    "neuroscience", 
    "datasets", 
    "scholarly", 
    "bibliography",
    "research",
    "automation"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]
requires-python = ">=3.8"
dependencies = [
    "pandas>=1.3.0",
    "scholarly>=1.7.0",
    "requests>=2.25.0",
    "beautifulsoup4>=4.9.0",
    "free-proxy>=1.1.0",
    "python-dotenv>=0.19.0",
    "httpx<=0.27.0",
    "sentence-transformers>=2.0.0",
    "PyGithub>=1.55.0",
    "neo4j>=5.0.0",
    "networkx>=3.0.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "plotly>=5.0.0",
    "umap-learn>=0.5.0",
    "scikit-learn>=1.0.0",
    "wordcloud>=1.8.0",
    "jinja2>=3.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "black>=21.0",
    "flake8>=3.9",
    "mypy>=0.910",
    "pre-commit>=2.15",
]
test = [
    "pytest>=6.0",
    "pytest-cov>=2.12",
    "pytest-mock>=3.6",
]

[project.urls]
Homepage = "https://github.com/neuromechanist/dataset_citations"
Repository = "https://github.com/neuromechanist/dataset_citations"
Documentation = "https://github.com/neuromechanist/dataset_citations/blob/main/README.md"
"Bug Reports" = "https://github.com/neuromechanist/dataset_citations/issues"

[project.scripts]
dataset-citations-discover = "dataset_citations.cli.discover:main"
dataset-citations-migrate = "dataset_citations.cli.migrate:main"
dataset-citations-update = "dataset_citations.cli.update:main"
dataset-citations-regenerate = "dataset_citations.cli.regenerate:main"
dataset-citations-retrieve-metadata = "dataset_citations.cli.retrieve_metadata:main"
dataset-citations-score-confidence = "dataset_citations.cli.score_confidence:main"
dataset-citations-analyze-temporal = "dataset_citations.cli.analyze_temporal:main"
dataset-citations-load-graph = "dataset_citations.cli.load_graph:main"
dataset-citations-analyze-networks = "dataset_citations.cli.analyze_networks:main"
dataset-citations-create-visualizations = "dataset_citations.cli.create_visualizations:main"
dataset-citations-create-network-visualizations = "dataset_citations.cli.create_network_visualizations:main"
dataset-citations-generate-embeddings = "dataset_citations.cli.generate_embeddings:main"
dataset-citations-analyze-umap = "dataset_citations.cli.analyze_umap:main"
dataset-citations-create-theme-networks = "dataset_citations.cli.create_theme_networks:main"
dataset-citations-create-research-context-networks = "dataset_citations.cli.create_research_context_networks:main"
dataset-citations-manage-embeddings = "dataset_citations.cli.manage_embeddings:main"
dataset-citations-analyze-temporal-themes = "dataset_citations.cli.analyze_temporal_themes:main"
dataset-citations-automate-updates = "dataset_citations.cli.automate_updates:main"
dataset-citations-create-interactive-reports = "dataset_citations.cli.create_interactive_reports:main"
dataset-citations-export-external-tools = "dataset_citations.cli.export_external_tools:main"
dataset-citations-automate-visualization-updates = "dataset_citations.cli.automate_visualization_updates:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  | \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*" 